type Passerelle {
    id: ID
    title: String
    description: String
    image: String
    geo: Geo
    favorites : [Profile]
    contributor: Profile
    validated: Boolean
    created_at: Date
    updated_ate: Date
}

type Query {
    passerelles(filter: FilterType): [Passerelle]
    findPasserelle(id: ID!): Passerelle
}

type Mutation {
  createPasserelle(data: CreatePasserelleInput!): Passerelle
  updatePasserelle(data: UpdatePasserelleInput!): Passerelle
}

input FilterType {
  limit: Int
  order: FindOptionOrderValue 
}

input CreatePasserelleInput {
    title: String!
    description: String
    image: String!
    lat: String
    lng: String
    contributorId: String
    validated: Boolean

}

input UpdatePasserelleInput {
    title: String!
    description: String
    image: String!
    geoId: String!
    favoritesIds : [String]
    contributorId: String
    validated: Boolean
}

enum FindOptionOrderValue {
  ASC
  DESC
}